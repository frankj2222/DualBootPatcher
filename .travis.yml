sudo: required

services:
  - docker

before_install:
  # Clone DualBootPatcher Repository
  - git clone --recursive https://github.com/frankj2222/DualBootPatcher -b master DualBootPatcher/
  # Pull docker images
  - docker pull yshalsager/dualbootpatcher:9.3.0-7-base
  - docker pull yshalsager/dualbootpatcher:9.3.0-7-android
  - docker pull yshalsager/dualbootpatcher:9.3.0-7-linux
script:
  # Make work directories 
  - mkdir $HOME/.android
  - mkdir -p ${TRAVIS_BUILD_DIR}/DualBootPatcher/builder/ && cd ${TRAVIS_BUILD_DIR}/DualBootPatcher/
  # Build APK
  - |
    docker run --rm -i -e USER_ID=$(id -u) -e GROUP_ID=$(id -g) -v "$(pwd):/builder/DualBootPatcher:rw,z" -v "${HOME}/.android:/builder/.android:rw,z" yshalsager/dualbootpatcher:9.3.0-7-android bash << EOF
    cd DualBootPatcher/builder && cmake .. -DMBP_BUILD_TARGET=android -DMBP_BUILD_TYPE=debug && make -j16 && rm -rf assets && cpack && make apk -j16
    make android-system_armeabi-v7a -j16 && make -C data/devices -j16
    exit
    EOF
  - |
    docker run --rm -i -e USER_ID=$(id -u) -e GROUP_ID=$(id -g) -v "$(pwd):/builder/DualBootPatcher:rw,z" -v "${HOME}/.android:/builder/.android:rw,z" yshalsager/dualbootpatcher:9.3.0-7-linux bash << EOF
    # Build Utilities Zip
    cd ~/DualBootPatcher/builder && ./utilities/create.sh
    # Build Linux
    cmake .. -DMBP_BUILD_TARGET=desktop -DMBP_PORTABLE=ON && make -j16 && cpack
    exit
    EOF
after_success:
  
deploy:
  provider: releases
  api_key: 013c0e3c0c3c91db2e2add963e5f1cf9d283291a
  file: DualBootUtilities-9.3.0.zip
  file: DualBootPatcher-9.3.0-Linux.zip
  file: Android_GUI-debug.apk
on:
  repo: frankj2222/DualBootPatcher
